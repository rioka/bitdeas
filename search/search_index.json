{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my tech notes Tech notes, snippets, thoughts, ideas, things I'm too old to remember... Long story short, whatever can make me stay awake, just because I'm curious!","title":"Welcome to my tech notes"},{"location":"#welcome-to-my-tech-notes","text":"Tech notes, snippets, thoughts, ideas, things I'm too old to remember... Long story short, whatever can make me stay awake, just because I'm curious!","title":"Welcome to my tech notes"},{"location":"GIT/aliases/","text":"Some aliases Note Aliases are saved in .gitconfig , in user home folder, e.g. %UserProfile% in Windows, or ~ in Linux. Here are some common aliases I use Entry Description st = status Shortcut for git status cl = clone Shortcut for git clone co = checkout Shortcut for git checkout ci = commit Shortcut for git commit com = checkout master Shortcut for git checkout master cob = checkout -b Shortcut for git checkout -b ; create a branch and check it out delb = branch -D Delete a branch pl = pull Shortcut for git pull plp = pull --prune Pull and prune local branches ps = push Shortcut for git push psup = push Shortcut for git push upstream origin ; push and create branch in remote origin lo1g = log --oneline --graph lobd = log --branches --date-order showalias = config --get-regexp alias unstage = reset HEAD -- delete last commit, but keep file; so you get back 1 commit, but do not lose anything mt = mergetool Run mergetool to solve conflicts","title":"Some aliases"},{"location":"GIT/aliases/#some-aliases","text":"Note Aliases are saved in .gitconfig , in user home folder, e.g. %UserProfile% in Windows, or ~ in Linux. Here are some common aliases I use Entry Description st = status Shortcut for git status cl = clone Shortcut for git clone co = checkout Shortcut for git checkout ci = commit Shortcut for git commit com = checkout master Shortcut for git checkout master cob = checkout -b Shortcut for git checkout -b ; create a branch and check it out delb = branch -D Delete a branch pl = pull Shortcut for git pull plp = pull --prune Pull and prune local branches ps = push Shortcut for git push psup = push Shortcut for git push upstream origin ; push and create branch in remote origin lo1g = log --oneline --graph lobd = log --branches --date-order showalias = config --get-regexp alias unstage = reset HEAD -- delete last commit, but keep file; so you get back 1 commit, but do not lose anything mt = mergetool Run mergetool to solve conflicts","title":"Some aliases"},{"location":"code-snippets/extract-binary-content-from-database/","text":"Extract the content of a VARBINARY (or IMAGE) column into a file using T-SQL only Use this code to save the content of a blob (varbinary or image) into a file, using T-SQL only. Requirements sp_configure 'show advanced options', 1; GO RECONFIGURE; GO sp_configure 'Ole Automation Procedures', 1; GO RECONFIGURE; GO Code DECLARE @rawData VARBINARY(MAX), @timestamp VARCHAR(MAX), @objectToken INT /* sample select */ DECLARE IMGPATH CURSOR FAST_FORWARD FOR SELECT Content FROM [dbName].dbo.Reports WHERE id = 7140 OPEN IMGPATH FETCH NEXT FROM IMGPATH INTO @rawData WHILE @@FETCH_STATUS = 0 BEGIN SET @timestamp = 'c:\\path\\to\\folder\\' + REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR, GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') + '.docx' PRINT @timestamp EXEC sp_OACreate 'ADODB.Stream', @objectToken OUTPUT EXEC sp_OASetProperty @objectToken, 'Type', 1 EXEC sp_OAMethod @objectToken, 'Open' EXEC sp_OAMethod @objectToken, 'Write', NULL, @rawData EXEC sp_OAMethod @objectToken, 'SaveToFile', NULL, @timetamp, 2 EXEC sp_OAMethod @objectToken, 'Close' EXEC sp_OADestroy @objectToken FETCH NEXT FROM IMGPATH INTO @rawData END CLOSE IMGPATH DEALLOCATE IMGPATH","title":"Save VARBINARY column to a file"},{"location":"code-snippets/extract-binary-content-from-database/#extract-the-content-of-a-varbinary-or-image-column-into-a-file-using-t-sql-only","text":"Use this code to save the content of a blob (varbinary or image) into a file, using T-SQL only.","title":"Extract the content of a VARBINARY (or IMAGE) column into a file using T-SQL only"},{"location":"code-snippets/extract-binary-content-from-database/#requirements","text":"sp_configure 'show advanced options', 1; GO RECONFIGURE; GO sp_configure 'Ole Automation Procedures', 1; GO RECONFIGURE; GO","title":"Requirements"},{"location":"code-snippets/extract-binary-content-from-database/#code","text":"DECLARE @rawData VARBINARY(MAX), @timestamp VARCHAR(MAX), @objectToken INT /* sample select */ DECLARE IMGPATH CURSOR FAST_FORWARD FOR SELECT Content FROM [dbName].dbo.Reports WHERE id = 7140 OPEN IMGPATH FETCH NEXT FROM IMGPATH INTO @rawData WHILE @@FETCH_STATUS = 0 BEGIN SET @timestamp = 'c:\\path\\to\\folder\\' + REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR, GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') + '.docx' PRINT @timestamp EXEC sp_OACreate 'ADODB.Stream', @objectToken OUTPUT EXEC sp_OASetProperty @objectToken, 'Type', 1 EXEC sp_OAMethod @objectToken, 'Open' EXEC sp_OAMethod @objectToken, 'Write', NULL, @rawData EXEC sp_OAMethod @objectToken, 'SaveToFile', NULL, @timetamp, 2 EXEC sp_OAMethod @objectToken, 'Close' EXEC sp_OADestroy @objectToken FETCH NEXT FROM IMGPATH INTO @rawData END CLOSE IMGPATH DEALLOCATE IMGPATH","title":"Code"},{"location":"code-snippets/map-error-message-to-code/","text":"Get SQL Server error code from an error message Sometimes you want to get the error code for a gioven error message, e.g. to add custom error handling code; the following statement can be used to retrieve the error code(s) matching an error message. DECLARE @errorMsg NVARCHAR(100), @langId INT SET @errorMsg = '%duplicate%'; /* set a specific language, if known */ SET langId = 1033 SELECT * FROM [sys.messages] WHERE [text] LIKE @errorMsg -- and [text] like '%key%' AND ([language_id] = @langId OR @langId IS NULL)","title":"Get SQL Server error code from message"},{"location":"code-snippets/map-error-message-to-code/#get-sql-server-error-code-from-an-error-message","text":"Sometimes you want to get the error code for a gioven error message, e.g. to add custom error handling code; the following statement can be used to retrieve the error code(s) matching an error message. DECLARE @errorMsg NVARCHAR(100), @langId INT SET @errorMsg = '%duplicate%'; /* set a specific language, if known */ SET langId = 1033 SELECT * FROM [sys.messages] WHERE [text] LIKE @errorMsg -- and [text] like '%key%' AND ([language_id] = @langId OR @langId IS NULL)","title":"Get SQL Server error code from an error message"},{"location":"sql-server/get-schema-details/","text":"How to Get Information About Schemas Both INFORMATION_SCHEMA.TABLES and sys.* are views. Their definitions are available in OBJECT_DEFINITION SELECT OBJECT_DEFINITION(OBJECT_ID('INFORMATION_SCHEMA.TABLES')) SELECT OBJECT_DEFINITION(OBJECT_ID('sys.tables')) SELECT OBJECT_DEFINITION(OBJECT_ID('sys.schemas')) When you run a query against INFORMATION_SCHEMA.TABLES , you're actually running a query against a simplified version of sys.objects and sys.schemas . So instead of schema.Tables , we can use sys_table .","title":"Get schema details"},{"location":"sql-server/get-schema-details/#how-to-get-information-about-schemas","text":"Both INFORMATION_SCHEMA.TABLES and sys.* are views. Their definitions are available in OBJECT_DEFINITION SELECT OBJECT_DEFINITION(OBJECT_ID('INFORMATION_SCHEMA.TABLES')) SELECT OBJECT_DEFINITION(OBJECT_ID('sys.tables')) SELECT OBJECT_DEFINITION(OBJECT_ID('sys.schemas')) When you run a query against INFORMATION_SCHEMA.TABLES , you're actually running a query against a simplified version of sys.objects and sys.schemas . So instead of schema.Tables , we can use sys_table .","title":"How to Get Information About Schemas"},{"location":"sql-server/versions/","text":"SQL Server versions Here is a list of SQL Server versions, and related commercial product Version Product 8 SQL Server 2000 9 SQL Server 2005 10 SQL Server 2008 11 SQL Server 2012 12 SQL Server 2014 13 SQL Server 2016 14 SQL Server 2017 15 SQL Server 2019","title":"Versions"},{"location":"sql-server/versions/#sql-server-versions","text":"Here is a list of SQL Server versions, and related commercial product Version Product 8 SQL Server 2000 9 SQL Server 2005 10 SQL Server 2008 11 SQL Server 2012 12 SQL Server 2014 13 SQL Server 2016 14 SQL Server 2017 15 SQL Server 2019","title":"SQL Server versions"},{"location":"visual-studio/versions/","text":"Map Visual Studio Version to Product Name Here is a map from Visual Studio versions to product name. Include (partial) details about supoprted solution format per version Version Product Name Solution Format Supported Solution Format 8 VS 2005 9.0 9 VS 2008 10.0 10 VS 2010 11.0 Up to 12.0 with SP1 11 VS 2012 12 VS 2013 12.0 13 NONE 14 VS 2015 15 VS 2017 16 VS 2019","title":"Versions"},{"location":"visual-studio/versions/#map-visual-studio-version-to-product-name","text":"Here is a map from Visual Studio versions to product name. Include (partial) details about supoprted solution format per version Version Product Name Solution Format Supported Solution Format 8 VS 2005 9.0 9 VS 2008 10.0 10 VS 2010 11.0 Up to 12.0 with SP1 11 VS 2012 12 VS 2013 12.0 13 NONE 14 VS 2015 15 VS 2017 16 VS 2019","title":"Map Visual Studio Version to Product Name"}]}